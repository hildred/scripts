#!/bin/bash

function make-completion-wrapper-1 () {
	local function_name="$2"
	local arg_count=$(($#-3))
	local comp_function_name="$(complete -pr $1|sed -e 's/^\(.* -F \)\([^ ]*\) [^ ]*$/\2/')"
	[ -z "$comp_function_name" ] && return
	shift 2
	local function="
		function $function_name {
			((COMP_CWORD+=$arg_count))
			COMP_WORDS=( "$@" \${COMP_WORDS[@]:1} )
			"$comp_function_name"
			return 0
		}"
	echo "$function"
	eval "$function"
}

function make-completion-wrapper-2 () {
	local function_name="$1"
	local alias_name="$2"
	local comp_function_base="$(complete -pr $3|sed -e 's/^\(.* -F\)\( [^ ]*\) [^ ]*$/\1/')"
	[ -z "$comp_function_name" ] && return
	echo "$comp_function_base $function_name $alias_name"
	eval "$comp_function_base $function_name $alias_name"
}

[ -e ~/.cache/bash_alias_complete ] && rm ~/.cache/bash_alias_complete

alias | \
	sed \
		-e 's/^alias //' \
		-e '/^\([^=]\+\)='\''\1 /d' \
		-e '/[^0-9A-Za-z -]/d' \
		-e h \
		-e "s/.*='\([^ ]*\)\( .*\)'$/\1! \1\2/" \
		-e 'y/ -!/__ /' -eG -e 's!\n[^=]*='\''\(.*\)'\''! \1!' \
		-e 's/^/make-completion-wrapper-1 /p' \
		-e 's/^[^ ]* [^ ]* \([^ ]*\) .*$/\1/' \
		-e x \
		-e 's!='\''\([^ ]*\) .*$! \1!' \
		-e x \
		-e 's!^!make-completion-wrapper-2 !' \
		-e G \
		-e 'y/\n/ /' \
	> ~/.cache/bash_alias_complete

. ~/.cache/bash_alias_complete

